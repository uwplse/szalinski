{"version":3,"sources":["CodeEditor.jsx","Renderer.jsx","cardFramer.js","RunButtons.jsx","App.jsx","Loader.jsx","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","CodeEditor","props","allowImport","code","setCode","readOnly","React","createElement","className","onClick","input","document","onchange","_asyncToGenerator","_callee","files","text","_context","Array","from","click","MonacoEditor","height","options","minimap","enabled","onChange","Renderer","caddyToScad","caddy","scad","jscad","openscadOpenJscadParser","parse","OpenJsCad","parseJsCadScriptASync","console","warn","getElementById","innerHTML","solid","Processor","convertToSolid","viewer","Viewer","setCsg","id","cardFramer","RunButtons","buttons","style","styles","container","map","b","button","label","verticalAlign","margin","textAlign","marginTop","width","App","wasm","_useState","useState","_useState2","_slicedToArray","csg","_useState3","_useState4","setCaddy","onRunClick","csgCode","run_szalinski","e","runSzalinski","caddy_to_scad","Loader","_Component","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","loadWasm","__webpack_require__","bind","setState","t0","concat","message","_inherits","_createClass","_this$state$wasm","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e1aa1343.chunk.js","sourcesContent":["import React from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\n\nexport default function CodeEditor(props) {\n  let { allowImport, code, setCode, readOnly } = props;\n\n  function onClickImport() {\n    let input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = async () => {\n      let files = Array.from(input.files);\n      if (files[0]) {\n        const text = await files[0].text();\n        if (text) {\n          setCode(text);\n        }\n      }\n    };\n    input.click();\n  }\n\n  return (\n    <div className=\"column\">\n      {allowImport && <button onClick={onClickImport}>Import from File</button>}\n      <MonacoEditor\n        value={code}\n        height={\"95%\"}\n        options={{ readOnly: readOnly, minimap: { enabled: false } }}\n        onChange={(value) => setCode(value)}\n      />\n    </div>\n  );\n}\n","/* global openscadOpenJscadParser OpenJsCad */\nimport React from \"react\";\n\nexport default function Renderer(props) {\n  const { caddyToScad, caddy } = props;\n\n  if (caddy) {\n    const scad = caddyToScad(caddy);\n    const jscad = openscadOpenJscadParser.parse(scad);\n    OpenJsCad.parseJsCadScriptASync(jscad, {}, {}, function (err, obj) {\n      if (err) {\n        console.warn(err);\n        return;\n      }\n      document.getElementById(\"viewer\").innerHTML = \"\";\n      let solid = OpenJsCad.Processor.convertToSolid(obj);\n      const viewer = new OpenJsCad.Viewer(\n        document.getElementById(\"viewer\"),\n        500\n      );\n      viewer.setCsg(solid);\n      viewer.state = 2;\n    });\n    return (\n      <div className=\"column\" id=\"viewer\">\n        {scad}\n      </div>\n    );\n  } else {\n    return <div className=\"column\"></div>;\n  }\n}\n","export const cardFramer = `difference() {\n\tmultmatrix([[1, 0, 0, 60], [0, 1, 0, 47.5], [0, 0, 1, 1.25], [0, 0, 0, 1]]) {\n\t\tmultmatrix([[120, 0, 0, 0], [0, 95, 0, 0], [0, 0, 2.5, 0], [0, 0, 0, 1]]) {\n\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t}\n\t\t}\n\t}\n\tdifference() {\n\t\tmultmatrix([[1, 0, 0, 60], [0, 1, 0, 47.4999], [0, 0, 1, 1.25], [0, 0, 0, 1]]) {\n\t\t\tmultmatrix([[100, 0, 0, 0], [0, 75, 0, 0], [0, 0, 2.5, 0], [0, 0, 0, 1]]) {\n\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdifference() {\n\t\t\tmultmatrix([[1, 0, 0, 60], [0, 1, 0, 47.4999], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\tmultmatrix([[100, 0, 0, 0], [0, 75, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tunion() {\n\t\t\t\tunion() {\n\t\t\t\t\tunion() {\n\t\t\t\t\t\tunion() {\n\t\t\t\t\t\t\tunion() {\n\t\t\t\t\t\t\t\tunion() {\n\t\t\t\t\t\t\t\t\tunion() {\n\t\t\t\t\t\t\t\t\t\tunion() {\n\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 93.8], [0, 1, 0, 72.975], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[32.4, 0, 0, 0], [0, 24.05, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 93.8], [0, 1, 0, 22.4875], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[32.4, 0, 0, 0], [0, 24.975, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 26.65], [0, 1, 0, 22.4875], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[33.3, 0, 0, 0], [0, 24.975, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 26.65], [0, 1, 0, 72.975], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\tmultmatrix([[33.3, 0, 0, 0], [0, 24.05, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 26.65], [0, 1, 0, 47.9625], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\tmultmatrix([[33.3, 0, 0, 0], [0, 23.975, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 60.45], [0, 1, 0, 22.4875], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\tmultmatrix([[32.3, 0, 0, 0], [0, 24.975, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmultmatrix([[1, 0, 0, 60.45], [0, 1, 0, 47.9625], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\tmultmatrix([[32.3, 0, 0, 0], [0, 23.975, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmultmatrix([[1, 0, 0, 60.45], [0, 1, 0, 72.975], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\tmultmatrix([[32.3, 0, 0, 0], [0, 24.05, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmultmatrix([[1, 0, 0, 93.8], [0, 1, 0, 47.9625], [0, 0, 1, 0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\tmultmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\tmultmatrix([[32.4, 0, 0, 0], [0, 23.975, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\tmultmatrix([[1, 0, 0, -0.5], [0, 1, 0, -0.5], [0, 0, 1, -0.5], [0, 0, 0, 1]]) {\n\t\t\t\t\t\t\t\tcube(size = [1, 1, 1], center = false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n","import React from \"react\";\n\nexport default function RunButtons(props) {\n  const { buttons } = props;\n\n  return (\n    <div style={styles.container}>\n      {buttons.map((b) => (\n        <button style={styles.button} key={b.id} onClick={b.onClick}>\n          {b.label}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    verticalAlign: \"middle\",\n    margin: \"auto\",\n    textAlign: \"center\",\n  },\n  button: {\n    marginTop: 10,\n    width: \"100%\",\n  },\n};\n","import React, { useState } from \"react\";\n\nimport CodeEditor from \"./CodeEditor.jsx\";\nimport Renderer from \"./Renderer\";\nimport { cardFramer } from \"./cardFramer\";\nimport RunButtons from \"./RunButtons.jsx\";\n\nexport default function App(props) {\n  const { wasm } = props;\n  const [csg, setCsg] = useState(cardFramer);\n  const [caddy, setCaddy] = useState(\"\");\n\n  const runSzalinski = (csgCode) => {\n    try {\n      return wasm.run_szalinski(csgCode);\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n  const onRunClick = () => {\n    setCaddy(runSzalinski(csg) || \"\");\n  };\n\n  const buttons = [\n    { id: \"szalinski\", label: \"Run Szalinski\", onClick: onRunClick },\n    { id: \"au\", label: \"Run AU\", onClick: onRunClick },\n  ];\n\n  return (\n    <div className=\"row\">\n      <CodeEditor code={csg} setCode={setCsg} allowImport />\n      <RunButtons buttons={buttons} />\n      <CodeEditor code={caddy} setCode={setCaddy} readOnly />\n      <Renderer caddyToScad={wasm.caddy_to_scad} caddy={caddy} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// Not a functional component because we async load wasm\n// in componentDidMount\n// todo: there's probably a way to do this with hooks?\n// not sure if worth the time though ....\nclass Loader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      wasm: {},\n    };\n  }\n\n  componentDidMount() {\n    this.loadWasm();\n  }\n\n  loadWasm = async () => {\n    try {\n      const wasm = await import(\"wasm-sz\");\n      this.setState({ wasm });\n    } catch (err) {\n      console.error(`Unexpected error in loadWasm. [Message: ${err.message}]`);\n    }\n  };\n\n  render() {\n    const { wasm = {} } = this.state;\n\n    return <App wasm={wasm} />;\n  }\n}\n\nexport default Loader;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Loader from \"./Loader.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Loader />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}